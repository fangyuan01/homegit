package com.hbue.homeworkapp.service;

import java.util.ArrayList;
import java.util.List;

import org.jivesoftware.smack.packet.Message;

import android.content.Context;

import com.alibaba.fastjson.JSONObject;

/**
 * xmpp分发器
 * 
 * @author Chen
 * 
 */
public class XmppReceivePdispatcher {
	private static XmppReceivePdispatcher instance = null;
	private static List<BaseXmppAction> actions = null;

	private XmppReceivePdispatcher(Context context) {
		actions = new ArrayList<BaseXmppAction>();
	}

	/**
	 * 获取xmpp分发器实例
	 * 
	 * @param context
	 * @return
	 */
	public static XmppReceivePdispatcher getInstance(Context context) {
		if (instance == null) {
			instance = new XmppReceivePdispatcher(context);
		}
		return instance;
	}

	/**
	 * 接受msg
	 * 
	 * @param body
	 */
	public void noticeMsg(Message msg) {
		try {
			String str = msg.getBody();
			System.out.println("get Xmpp msg :" + str + "|From: "
					+ msg.getFrom());
			JSONObject job = JSONObject.parseObject(str);
			String idStr = job.getString("id");
			long id = Long.parseLong(idStr);
			for (BaseXmppAction item : actions) {
				if (id == item.getId()) {
					if (item.onGetMessage(msg)) {
						actions.remove(item);
						break;
					}
				}
			}
		} catch (Exception er) {
			er.printStackTrace();
		}
	}

	/**
	 * 添加绑定的action
	 * 
	 * @param action
	 */
	public void addAction(BaseXmppAction action) {
		actions.add(action);
	}

	/**
	 * 移除绑定的action
	 * 
	 * @param action
	 * @return
	 */
	public boolean removeAction(BaseXmppAction action) {
		return actions.remove(action);
	}
}
